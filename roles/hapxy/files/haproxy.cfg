#---------------------------------------------------------------------
# Global configurations
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    ssl-server-verify none

    # turn on stats unix socket
    tune.ssl.default-dh-param 2048
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend http_in 
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/twm-selfsigned.pem
    # define domains
    acl host_mysite hdr(host)  -i vipinable.ddns.net
    acl host_twm hdr(host)     -i theworkingmethods.com
    acl host_as2web hdr(host)  -i as2web-01p.agilesystemsolutions.com
    acl vmware url_beg   /esxi 
    # route definition
    use_backend mysite        if host_mysite
    use_backend as2web        if host_as2web
    use_backend twmbe         if host_twm
    #use_backend maintanance         if host_twm
    acl host_vmware hdr(host)  -i vipinable.ddns.net
    acl vmware url_beg   /ui
    use_backend vmware        if host_vmware
    use_backend vmware        if vmware

    acl pxe url_beg   /pxe
    use_backend pxe if pxe

#---------------------------------------------------------------------
# backend section
#---------------------------------------------------------------------
backend mysite
    balance roundrobin
    option httpchk
    cookie mysite insert indirect nocache
       server      as2web-01p.agss.net 192.168.1.10:80 check
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

backend as2web
    balance     roundrobin
    server      as2web-01p.agss.net 192.168.1.11:8081 check

backend twmbe
    #redirect scheme https if !{ ssl_fc }
    server      cos7web-01p.agss.net 192.168.1.9:80 check

backend vmware
    balance     leastconn
    server      esxi01.agss.net  192.168.1.200:44 ssl verify none

backend maintanance
    server      localhost 127.0.0.1:8081 check

backend pxe
    server      localhost 127.0.0.1:8081 check

listen elasticsearch
    bind *:9200
    mode http
    balance roundrobin
    server escl-01.agss.net 192.168.1.6:9200 check
    server escl-02.agss.net 192.168.1.7:9200 check
    server escl-03.agss.net 192.168.1.8:9200 check

listen graphana
    bind *:3000
    mode http
    balance roundrobin
    server sysmon01.agss.net 192.168.1.10:3000 check

listen stats *:8080
    stats enable
    stats uri /
    stats hide-version
    stats auth admin:Pls@1!0w
